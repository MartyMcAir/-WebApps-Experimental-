<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/data/jpa
        https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <mvc:annotation-driven/>
    <!--Scanning components in base-package (look for annotations) -->
    <context:component-scan base-package="com.*"/>
    <!--    static access for css js etc.. -->
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="0"/>
    <!--Activates various annotations to be detected in bean classes: Spring's @Required and @Autowired and so on-->
    <context:annotation-config/>

    <!-- This scans all packages below com.acme.repositories for interfaces extending JpaRepository
    and creates a Spring bean for it that is backed by an implementation of SimpleJpaRepository -->
    <jpa:repositories base-package="com.repositories"/>

    <!--@Transaction annotation support -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Use in-memory embedded H2 database -->
    <jdbc:embedded-database id="dataSource" type="H2">
        <!--        <jdbc:script location="classpath:create-db.sql" />-->
        <!--        <jdbc:script location="classpath:insert-data2.sql" />-->
    </jdbc:embedded-database>

    <!--Обеспечивает работу с транзакциями в Spring -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <import resource="jpa_config.xml"/>
    <import resource="security_config_Use_UserService.xml"/>

    <!-- https://www.codesenior.com/en/tutorial/Solving-Spring-Message-Resource-Bundle-UTF-8-Problem -->
    <!-- For reading the properties files -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <!--        <property name="basename" value="/WEB-INF/message"/>-->
        <property name="basename" value="classpath:messages"/>
        <property name="fallbackToSystemLocale" value="true"/>
        <property name="fileEncodings" value="UTF-8"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="3600"/>
    </bean>

    <!-- Locale Change Interceptor -->
    <!-- if bean withOut tags: mvc:interceptors _ than, it 's don't work -->
    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!-- Cookie Resolver -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="ru"/>
    </bean>

</beans>