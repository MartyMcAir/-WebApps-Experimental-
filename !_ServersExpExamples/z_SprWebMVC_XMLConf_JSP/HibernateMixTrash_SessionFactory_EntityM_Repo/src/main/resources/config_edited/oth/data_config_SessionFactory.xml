<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
        http://www.springframework.org/schema/data/jpa
        https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- https://spring.io/blog/2011/02/10/getting-started-with-spring-data-jpa -->
    <!-- This scans all packages below com.acme.repositories for interfaces extending JpaRepository
    and creates a Spring bean for it that is backed by an implementation of SimpleJpaRepository -->
    <jpa:repositories base-package="com.repositories"/>

    <!--     Use in-memory embedded H2 database -->
    <jdbc:embedded-database id="dataSource" type="H2">
        <!--        <jdbc:script location="classpath:create-db.sql" />-->
        <!--        <jdbc:script location="classpath:insert-data2.sql" />-->
    </jdbc:embedded-database>

    <!--@Transaction annotation support -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--Обеспечивает работу с транзакциями в Spring -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.pass}"/>
    </bean>

    <!--   ___   Hibernate   ___   -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.baeldung.hibernate.bootstrap.model"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
            </props>
        </property>

        <!--        <property name="hibernateProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.connection.driver_class">${jdbc.driverClassName}</prop>-->
<!--                <prop key="hibernate.connection.url">${jdbc.url}</prop>-->
<!--                <prop key="hibernate.connection.username">${jdbc.user}</prop>-->
<!--                <prop key="hibernate.connection.password">${jdbc.pass]}</prop>-->
<!--                &lt;!&ndash;                <prop key="hibernate.connection.isolation">4</prop>&ndash;&gt;-->
<!--                &lt;!&ndash;                <prop key="hibernate.connection.autocommit">false</prop>&ndash;&gt;-->

<!--                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
<!--                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
<!--                &lt;!&ndash;                <prop key="hibernate.format_sql">false</prop>&ndash;&gt;-->
<!--                <prop key="hibernate.dialect">${hibernate.dialect}</prop>-->
<!--            </props>-->
<!--        </property>-->
    </bean>

</beans>
